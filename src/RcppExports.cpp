// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Sigmoid
NumericVector Sigmoid(NumericVector a, double n, double k);
RcppExport SEXP _LinQView_Sigmoid(SEXP aSEXP, SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(Sigmoid(a, n, k));
    return rcpp_result_gen;
END_RCPP
}
// EucNorm
double EucNorm(NumericVector a);
RcppExport SEXP _LinQView_EucNorm(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(EucNorm(a));
    return rcpp_result_gen;
END_RCPP
}
// scaleDistCpp
NumericMatrix scaleDistCpp(NumericMatrix data, double n, double k);
RcppExport SEXP _LinQView_scaleDistCpp(SEXP dataSEXP, SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(scaleDistCpp(data, n, k));
    return rcpp_result_gen;
END_RCPP
}
// scaleDistUpdateCpp
NumericMatrix scaleDistUpdateCpp(NumericMatrix data, double n, double k, NumericVector c);
RcppExport SEXP _LinQView_scaleDistUpdateCpp(SEXP dataSEXP, SEXP nSEXP, SEXP kSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(scaleDistUpdateCpp(data, n, k, c));
    return rcpp_result_gen;
END_RCPP
}
// objectiveFunctionCpp
double objectiveFunctionCpp(double alpha, NumericVector X, NumericVector Y);
RcppExport SEXP _LinQView_objectiveFunctionCpp(SEXP alphaSEXP, SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(objectiveFunctionCpp(alpha, X, Y));
    return rcpp_result_gen;
END_RCPP
}
// gradientFunctionCpp
double gradientFunctionCpp(double alpha, NumericVector X, NumericVector Y);
RcppExport SEXP _LinQView_gradientFunctionCpp(SEXP alphaSEXP, SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(gradientFunctionCpp(alpha, X, Y));
    return rcpp_result_gen;
END_RCPP
}
// gradientDescentCpp
double gradientDescentCpp(NumericVector X, NumericVector Y, double alpha, double learning_rate, double low_threshold, int max_iter);
RcppExport SEXP _LinQView_gradientDescentCpp(SEXP XSEXP, SEXP YSEXP, SEXP alphaSEXP, SEXP learning_rateSEXP, SEXP low_thresholdSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type learning_rate(learning_rateSEXP);
    Rcpp::traits::input_parameter< double >::type low_threshold(low_thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(gradientDescentCpp(X, Y, alpha, learning_rate, low_threshold, max_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LinQView_Sigmoid", (DL_FUNC) &_LinQView_Sigmoid, 3},
    {"_LinQView_EucNorm", (DL_FUNC) &_LinQView_EucNorm, 1},
    {"_LinQView_scaleDistCpp", (DL_FUNC) &_LinQView_scaleDistCpp, 3},
    {"_LinQView_scaleDistUpdateCpp", (DL_FUNC) &_LinQView_scaleDistUpdateCpp, 4},
    {"_LinQView_objectiveFunctionCpp", (DL_FUNC) &_LinQView_objectiveFunctionCpp, 3},
    {"_LinQView_gradientFunctionCpp", (DL_FUNC) &_LinQView_gradientFunctionCpp, 3},
    {"_LinQView_gradientDescentCpp", (DL_FUNC) &_LinQView_gradientDescentCpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_LinQView(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
